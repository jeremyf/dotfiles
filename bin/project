#!/usr/bin/env ruby -w

project_name = ARGV[0]
if !project_name && ENV['PWD']
  project_name = ENV['PWD'].split("/").last
end

if project_name
  project_file_name = File.join(
    ENV['HOME'],
    'Projects',
    "#{project_name}.sublime-project"
  )
  repository_dirname = File.join(
    ENV['HOME'],
    'Repositories',
    project_name
  )

  unless File.exist?(repository_dirname)
    $stdout.puts %(Missing unable to find #{project_name.inspect})
    $stdout.puts %(  in #{File.dirname(repository_dirname)}")
    exit(-1)
  end
  unless File.exist?(project_file_name)
    File.open(project_file_name, 'w+') do |file|
      file.puts %({)
      file.puts %(  "folders":)
      file.puts %(  [)
      file.puts %(    {)
      file.puts %(      "path": "#{repository_dirname}",)
      file.puts %(      "folder_exclude_patterns": [".yardoc", "pkg", "tags", "doc",  "coverage","tmp","jetty", ".bundle", ".yardoc"],)
      file.puts %(      "file_exclude_patterns": [".tag*", "*.gif", "*.jpg", "tags", "*.png", ".tags", ".tags_sorted_by_file", "*.log", "*.sqlite3", "*.sql"])
      file.puts %(    })
      file.puts %(  ],)
      file.puts %(  "settings":)
      file.puts %(  {)
      file.puts %(    "tab_size": 2)
      file.puts %(  })
      file.puts %(})
    end
    sleep(1)
  end
  `subl #{project_file_name}`
  $stdout.puts repository_dirname
  exit(0)
else
  $stdout.puts "Example `#{File.basename(__FILE__)} project_name`"
  exit(-1)
end